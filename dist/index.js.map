{"version":3,"file":"index.js","sources":["../app/consts/validatorScores.js","../app/validators/parents.js","../app/validators/tagName.js","../app/validators/position.js","../app/Validators/tagName.js","../app/services/validatorsManager.js","../app/services/elementDetector.js","../app/services/storage.js","../app/index.js"],"sourcesContent":["export const SCORE = {\r\n    TAG: 50,\r\n    POSITION: 10,\r\n    ATTR: 10,\r\n    PARENT: 10,\r\n    CHILDREN: 10,\r\n    CONTENT: 10\r\n}","import { getTagNameScore } from \"./tagName\";\r\n\r\nexport const getParentsScore = (currParent, oldParent)=>{\r\n\r\n    let score;\r\n    const elParentAttr = JSON.stringify(currParent.attributes);\r\n    const parentAttr = JSON.stringify(oldParent.attributes);\r\n\r\n    if(currParent.tagName == oldParent.tagName && elParentAttr === parentAttr){\r\n        score = 10;\r\n    }else if(currParent.tagName == oldParent.tagName && elParentAttr != parentAttr){\r\n        score = 5;\r\n    }else if(elParentAttr === parentAttr){\r\n        const tagScore = getTagNameScore(currParent.tagName, oldParent.tagName);\r\n        score = tagScore >= 5 ? 5 : 0;\r\n    }\r\n\r\n    return score;\r\n};","export const getTagNameScore = (currTagName, oldTagName) => {\r\n\r\n    let score;\r\n\r\n    if (currTagName == oldTagName) {\r\n        score = 10;\r\n    } else if (currTagName == \"DIV\" && oldTagName == \"SPAN\" || currTagName == \"SPAN\" && oldTagName == \"DIV\") {\r\n        score = 7;\r\n    } else if (currTagName == \"LINK\" && oldTagName == \"BUTTON\" || currTagName == \"BUTTON\" && oldTagName == \"LINK\") {\r\n        score = 5;\r\n    } else {\r\n        score = 0;\r\n    }\r\n\r\n    return score;\r\n}\r\n","export const getPOsitionScore = (currPosition, oldPosition)=>{\r\n    \r\n    let score;\r\n    const yDiff = Math.abs(currPosition.absY - oldPosition.absY);\r\n    const xDiff = Math.abs(currPosition.absX - oldPosition.absX);\r\n\r\n    if(currPosition.absX == oldPosition.absX && currPosition.absY == oldPosition.absY){\r\n        score = 10;\r\n    }else if(currPosition.absX == oldPosition.absX && currPosition.absY != oldPosition.absY){\r\n       score = yDiff > 200 ? 2 : 7;  \r\n    }else if(currPosition.absX != oldPosition.absX && currPosition.absY == oldPosition.absY){\r\n        score = xDiff > 200 ? 2 : 7;  \r\n    }else{\r\n        score = xDiff > 500 && yDiff > 500 ? 0 : 2; \r\n    }\r\n\r\n    return score;\r\n}","export const getTagNameScore = (currTagName, oldTagName) => {\r\n\r\n    let score;\r\n\r\n    if (currTagName == oldTagName) {\r\n        score = 10;\r\n    } else if (currTagName == \"DIV\" && oldTagName == \"SPAN\" || currTagName == \"SPAN\" && oldTagName == \"DIV\") {\r\n        score = 7;\r\n    } else if (currTagName == \"LINK\" && oldTagName == \"BUTTON\" || currTagName == \"BUTTON\" && oldTagName == \"LINK\") {\r\n        score = 5;\r\n    } else {\r\n        score = 0;\r\n    }\r\n\r\n    return score;\r\n}\r\n","import { SCORE } from \"../consts/validatorScores\";\r\nimport { getAttrsScore } from \"../validators/attributes\";\r\nimport { getParentsScore } from \"../validators/parents\";\r\nimport { getPOsitionScore } from \"../validators/position\";\r\nimport { getTagNameScore } from \"../Validators/tagName\";\r\n\r\nexport const getFinalScore = (currEl, oldEl) => {\r\n\r\n    // const attrScore = {\r\n    //     weight: SCORE.ATTR,\r\n    //     score: getAttrsScore(currEl, oldEl)\r\n    // };\r\n    const parentScore = {\r\n        weight: SCORE.PARENT,\r\n        score: getParentsScore(currEl, oldEl)\r\n    };\r\n    const positionScore = {\r\n        weight: SCORE.POSITION,\r\n        score: getPOsitionScore(currEl, oldEl)\r\n    };\r\n    const tagScore = {\r\n        weight: SCORE.TAG,\r\n        score: getTagNameScore(currEl.tagName, oldEl.tagName)\r\n    };\r\n\r\n    return weightScore([parentScore, positionScore, tagScore]);\r\n};\r\n\r\nconst weightScore = (validatorsArray) => {\r\n    let finalScore = 0;\r\n    validatorsArray.forEach(validator => {\r\n        const weight = validator.weight;\r\n        const score = validator.score;\r\n        finalScore += percentage(weight, score);\r\n    });\r\n    return finalScore;\r\n};\r\n\r\nconst percentage = (percent, score) => {\r\n    return score * percent / 100;\r\n};\r\n","import { getFinalScore } from \"./validatorsManager\";\r\n\r\nexport const detectElement = (oldEl) => {\r\n\r\n    const elsByTag = document.getElementsByTagName(oldEl?.tagName.toLowerCase());\r\n    let mostCompatibleEl, maxScore = 0;\r\n\r\n    for (let el of elsByTag) {\r\n        const score = getFinalScore(el, oldEl);\r\n        if (score > maxScore) {\r\n            mostCompatibleEl = el;\r\n        }\r\n    };\r\n    console.log(\"Found element: \", mostCompatibleEl);\r\n    if (mostCompatibleEl) addBorder(mostCompatibleEl);\r\n};\r\n\r\nconst addBorder = (el) => {\r\n    el.style.border = \"1px solid red\";\r\n};","export const getErrorElements = () => {\r\n    return JSON.parse(localStorage.getItem(\"Errors\"));\r\n};\r\n\r\nexport const saveErrorInDB = () => {\r\n    const elWithError = document.querySelector(\"img[src='images/5.webp']\").parentElement;\r\n\r\n    const bodyRect = document.body.getBoundingClientRect();\r\n    const elmRect = elWithError.getBoundingClientRect();\r\n    const absX = elmRect.left - bodyRect.left;\r\n    const absY = elmRect.top - bodyRect.top;\r\n\r\n    const elementText = [...elWithError.childNodes].filter(node => node.nodeType === Node.TEXT_NODE).map(node => node.textContent).join('')\r\n\r\n    const error = {\r\n        tagName: elWithError.tagName,\r\n        parent: {\r\n            tag: elWithError.parentElement.tagName,\r\n            attributes: elWithError.parentElement.attributes,\r\n        },\r\n        attributes: [...elWithError.attributes],\r\n        children: elWithError.children.length,\r\n        content: elementText,\r\n        position: {\r\n            x: absX,\r\n            y: absY\r\n        }\r\n    }\r\n\r\n    localStorage.setItem(\"Errors\", JSON.stringify([error]));\r\n};","import { detectElement } from \"./services/elementDetector\";\r\nimport { getErrorElements, saveErrorInDB } from \"./services/storage\";\r\n\r\nsaveErrorInDB();\r\n\r\nconst errors = getErrorElements();\r\n\r\nerrors.forEach(err => {\r\n    detectElement(err);\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["SCORE","getParentsScore","currParent","oldParent","score","elParentAttr","JSON","stringify","attributes","parentAttr","tagName","tagScore","currTagName","oldTagName","getTagNameScore","getPOsitionScore","currPosition","oldPosition","yDiff","Math","abs","absY","xDiff","absX","getFinalScore","currEl","oldEl","parentScore","weight","positionScore","weightScore","validatorsArray","finalScore","forEach","validator","percentage","percent","addBorder","el","style","border","elWithError","document","querySelector","parentElement","bodyRect","body","getBoundingClientRect","elmRect","left","top","elementText","childNodes","filter","node","nodeType","Node","TEXT_NODE","map","textContent","join","error","parent","tag","children","length","content","position","x","y","localStorage","setItem","saveErrorInDB","parse","getItem","err","elsByTag","getElementsByTagName","toLowerCase","mostCompatibleEl","console","log","detectElement"],"mappings":"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"}