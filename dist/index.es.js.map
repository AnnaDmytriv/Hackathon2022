{"version":3,"file":"index.es.js","sources":["../app/consts/validatorScores.js","../app/validators/attributes.js","../app/validators/parents.js","../app/validators/tagName.js","../app/validators/position.js","../app/Validators/tagName.js","../app/Validators/children.js","../app/Validators/textContent.js","../app/services/validatorsManager.js","../app/services/elementDetector.js","../app/services/storage.js","../app/index.js"],"sourcesContent":["export const SCORE = {\r\n    TAG: 50,\r\n    POSITION: 10,\r\n    ATTR: 10,\r\n    PARENT: 10,\r\n    CHILDREN: 10,\r\n    CONTENT: 10\r\n}","export const getAttrsScore = (el, dataObj) => {\r\n  let score = 0;\r\n  const attrs = el.attributes ? [...el.attributes] : [];\r\n\r\n  score = someAttrNames(attrs, dataObj);\r\n\r\n  return score;\r\n};\r\n\r\nconst someAttrNames = (attrs, dataObj) => {\r\n  let similarAttrsScore;\r\n  let similarAttrsValueScore;\r\n  const attrScore = 75 / attrs.length;\r\n  const classScore = 25 / attrs.length;\r\n  const { attributes } = dataObj;\r\n\r\n  const maxScore = attrScore * attrs.length + classScore * attrs.length;\r\n\r\n  attrs.forEach((attr, idx) => {\r\n    if (attributes.find(attr)) {\r\n      const scoreToAdd = attr.name === 'class' ? classScore : attrScore;\r\n      similarAttrsScore += classScore;\r\n      if (sameAttrValue(attr, attributes[idx])) {\r\n        similarAttrsValueScore += scoreToAdd;\r\n      }\r\n      similarAttrsScore += scoreToAdd;\r\n    }\r\n  });\r\n\r\n  return (similarAttrsScore + similarAttrsValueScore) / maxScore;\r\n};\r\n\r\nconst sameAttrValue = (attr1, attr2) => {\r\n  return attr1.value === attr2.value;\r\n};\r\n","import { getTagNameScore } from \"./tagName\";\r\n\r\nexport const getParentsScore = (currParent, oldParent)=>{\r\n\r\n    let score;\r\n    const elParentAttr = JSON.stringify(currParent.attributes);\r\n    const parentAttr = JSON.stringify(oldParent.attributes);\r\n\r\n    if(currParent.tagName == oldParent.tagName && elParentAttr === parentAttr){\r\n        score = 10;\r\n    }else if(currParent.tagName == oldParent.tagName && elParentAttr != parentAttr){\r\n        score = 5;\r\n    }else if(elParentAttr === parentAttr){\r\n        const tagScore = getTagNameScore(currParent.tagName, oldParent.tagName);\r\n        score = tagScore >= 5 ? 5 : 0;\r\n    }\r\n\r\n    return score;\r\n};","export const getTagNameScore = (currTagName, oldTagName) => {\r\n\r\n    let score;\r\n\r\n    if (currTagName == oldTagName) {\r\n        score = 10;\r\n    } else if (currTagName == \"DIV\" && oldTagName == \"SPAN\" || currTagName == \"SPAN\" && oldTagName == \"DIV\") {\r\n        score = 7;\r\n    } else if (currTagName == \"LINK\" && oldTagName == \"BUTTON\" || currTagName == \"BUTTON\" && oldTagName == \"LINK\") {\r\n        score = 5;\r\n    } else {\r\n        score = 0;\r\n    }\r\n\r\n    return score;\r\n}\r\n","export const getPositionScore = (currEl, oldEl)=>{\r\n    \r\n    const bodyRect = document.body.getBoundingClientRect();\r\n    const elmRect = currEl.getBoundingClientRect();\r\n    const currX = elmRect.left - bodyRect.left;\r\n    const currY = elmRect.top - bodyRect.top;\r\n    \r\n    const yDiff = Math.abs(currY - oldEl.absY);\r\n    const xDiff = Math.abs(currX - oldEl.absX);\r\n\r\n    let score;\r\n    if(currX == oldEl.absX && currY == oldEl.absY){\r\n        score = 10;\r\n    }else if(currX == oldEl.absX && currY != oldEl.absY){\r\n       score = yDiff > 200 ? 2 : 7;  \r\n    }else if(currX != oldEl.absX && currY == oldEl.absY){\r\n        score = xDiff > 200 ? 2 : 7;  \r\n    }else{\r\n        score = xDiff > 500 && yDiff > 500 ? 0 : 2; \r\n    }\r\n\r\n    return score;\r\n}","export const getTagNameScore = (currTagName, oldTagName) => {\r\n\r\n    let score;\r\n\r\n    if (currTagName == oldTagName) {\r\n        score = 10;\r\n    } else if (currTagName == \"DIV\" && oldTagName == \"SPAN\" || currTagName == \"SPAN\" && oldTagName == \"DIV\") {\r\n        score = 7;\r\n    } else if (currTagName == \"LINK\" && oldTagName == \"BUTTON\" || currTagName == \"BUTTON\" && oldTagName == \"LINK\") {\r\n        score = 5;\r\n    } else {\r\n        score = 0;\r\n    }\r\n\r\n    return score;\r\n}\r\n","export const getChildrenScore = (el, dataObj) => {\r\n  let score = 0;\r\n  const currentChildren = el.children.length;\r\n  const { children } = dataObj;\r\n  if (children === currentChildren) {\r\n    return 100;\r\n  }\r\n\r\n  if (children > 0 && currentChildren === 0) {\r\n    return 0;\r\n  }\r\n\r\n  return score;\r\n};\r\n","export const getTextScore = (el, dataObj) => {\r\n  const { content } = dataObj;\r\n  const currentElementText = [...el.childNodes]\r\n    .filter((node) => node.nodeType === Node.TEXT_NODE)\r\n    .map((node) => node.textContent)\r\n    .join('');\r\n\r\n  score = similarity(content, currentElementText) * 100;\r\n\r\n  return score;\r\n};\r\n\r\nconst editDistance = (s1, s2) => {\r\n  s1 = s1 && s1.toLowerCase();\r\n  s2 = s1 && s2.toLowerCase();\r\n\r\n  var costs = new Array();\r\n  for (var i = 0; i <= s1.length; i++) {\r\n    var lastValue = i;\r\n    for (var j = 0; j <= s2.length; j++) {\r\n      if (i == 0) costs[j] = j;\r\n      else {\r\n        if (j > 0) {\r\n          var newValue = costs[j - 1];\r\n          if (s1.charAt(i - 1) != s2.charAt(j - 1))\r\n            newValue = Math.min(Math.min(newValue, lastValue), costs[j]) + 1;\r\n          costs[j - 1] = lastValue;\r\n          lastValue = newValue;\r\n        }\r\n      }\r\n    }\r\n    if (i > 0) costs[s2.length] = lastValue;\r\n  }\r\n  return costs[s2.length];\r\n};\r\n\r\nconst similarity = (s1, s2) => {\r\n  var longer = s1;\r\n  var shorter = s2;\r\n  if (s1.length < s2.length) {\r\n    longer = s2;\r\n    shorter = s1;\r\n  }\r\n  var longerLength = longer.length;\r\n  if (longerLength == 0) {\r\n    return 1.0;\r\n  }\r\n  return (\r\n    (longerLength - editDistance(longer, shorter)) / parseFloat(longerLength)\r\n  );\r\n};\r\n","import { SCORE } from \"../consts/validatorScores\";\r\nimport { getAttrsScore } from \"../validators/attributes\";\r\nimport { getParentsScore } from \"../validators/parents\";\r\nimport { getPositionScore } from \"../validators/position\";\r\nimport { getTagNameScore } from \"../Validators/tagName\";\r\nimport { getChildrenScore } from \"../Validators/children\";\r\nimport { getTextScore } from \"../Validators/textContent\";\r\n\r\nexport const getFinalScore = (currEl, oldEl) => {\r\n\r\n    const attrScore = {\r\n        weight: SCORE.ATTR,\r\n        score: getAttrsScore(currEl, oldEl)\r\n    };\r\n    const parentScore = {\r\n        weight: SCORE.PARENT,\r\n        score: getParentsScore(currEl, oldEl)\r\n    };\r\n    const positionScore = {\r\n        weight: SCORE.POSITION,\r\n        score: getPositionScore(currEl, oldEl)\r\n    };\r\n    const tagScore = {\r\n        weight: SCORE.TAG,\r\n        score: getTagNameScore(currEl.tagName, oldEl.tagName)\r\n    };\r\n    const childrenScore = {\r\n        weight: SCORE.CHILDREN,\r\n        score: getChildrenScore(currEl, oldEl)\r\n    };\r\n    const contentScore = {\r\n        weight: SCORE.CONTENT,\r\n        score: getTextScore(currEl, oldEl)\r\n    };\r\n\r\n    return weightScore([attrScore, parentScore, positionScore, tagScore, childrenScore, contentScore]);\r\n};\r\n\r\nconst weightScore = (validatorsArray) => {\r\n    let finalScore = 0;\r\n    validatorsArray.forEach(validator => {\r\n        const weight = validator.weight;\r\n        const score = validator.score;\r\n        finalScore += percentage(weight, score);\r\n    });\r\n    return finalScore;\r\n};\r\n\r\nconst percentage = (percent, score) => {\r\n    return score * percent / 100;\r\n};\r\n","import { getFinalScore } from \"./validatorsManager\";\r\n\r\nexport const detectElement = (oldEl) => {\r\n\r\n    const elsByTag = document.getElementsByTagName(oldEl?.tagName.toLowerCase());\r\n    let mostCompatibleEl, maxScore = 0;\r\n\r\n    for (let el of elsByTag) {\r\n        const score = getFinalScore(el, oldEl);\r\n        if (score > maxScore) {\r\n            mostCompatibleEl = el;\r\n        }\r\n    };\r\n    console.log(\"Found element: \", mostCompatibleEl);\r\n    if (mostCompatibleEl) addBorder(mostCompatibleEl);\r\n};\r\n\r\nconst addBorder = (el) => {\r\n    el.style.border = \"1px solid red\";\r\n};","export const getErrorElements = () => {\r\n    return JSON.parse(localStorage.getItem(\"Errors\"));\r\n};\r\n\r\nexport const saveErrorInDB = () => {\r\n    const elWithError = document.querySelector(\"img[src='images/5.webp']\").parentElement;\r\n\r\n    const bodyRect = document.body.getBoundingClientRect();\r\n    const elmRect = elWithError.getBoundingClientRect();\r\n    const absX = elmRect.left - bodyRect.left;\r\n    const absY = elmRect.top - bodyRect.top;\r\n\r\n    const elementText = [...elWithError.childNodes].filter(node => node.nodeType === Node.TEXT_NODE).map(node => node.textContent).join('')\r\n\r\n    const error = {\r\n        tagName: elWithError.tagName,\r\n        parent: {\r\n            tag: elWithError.parentElement.tagName,\r\n            attributes: elWithError.parentElement.attributes,\r\n        },\r\n        attributes: [...elWithError.attributes],\r\n        children: elWithError.children.length,\r\n        content: elementText,\r\n        position: {\r\n            x: absX,\r\n            y: absY\r\n        }\r\n    }\r\n\r\n    localStorage.setItem(\"Errors\", JSON.stringify([error]));\r\n};","import { detectElement } from \"./services/elementDetector\";\r\nimport { getErrorElements, saveErrorInDB } from \"./services/storage\";\r\n\r\nsaveErrorInDB();\r\n\r\nconst errors = getErrorElements();\r\n\r\nerrors.forEach(err => {\r\n    detectElement(err);\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["SCORE","getAttrsScore","el","dataObj","score","attrs","attributes","someAttrNames","similarAttrsScore","similarAttrsValueScore","attrScore","length","classScore","maxScore","forEach","attr","idx","find","scoreToAdd","name","sameAttrValue","attr1","attr2","value","getParentsScore","currParent","oldParent","elParentAttr","JSON","stringify","parentAttr","tagName","tagScore","currTagName","oldTagName","getTagNameScore","getPositionScore","currEl","oldEl","bodyRect","document","body","getBoundingClientRect","elmRect","currX","left","currY","top","yDiff","Math","abs","absY","xDiff","absX","getChildrenScore","currentChildren","children","getTextScore","content","currentElementText","childNodes","filter","node","nodeType","Node","TEXT_NODE","map","textContent","join","similarity","s1","s2","longer","shorter","longerLength","toLowerCase","costs","Array","i","lastValue","j","newValue","charAt","min","editDistance","parseFloat","getFinalScore","weight","parentScore","positionScore","childrenScore","contentScore","weightScore","validatorsArray","finalScore","validator","percentage","percent","addBorder","style","border","elWithError","querySelector","parentElement","elementText","error","parent","tag","position","x","y","localStorage","setItem","saveErrorInDB","parse","getItem","err","elsByTag","getElementsByTagName","mostCompatibleEl","console","log","detectElement"],"mappings":"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"}